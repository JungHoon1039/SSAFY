<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.ws.model.mapper.CommentDao">
	
	<select id="selectComments" parameterType="map" resultMap="commentMap">
		SELECT c.id AS "id", 
			c.content AS "content",
			c.article_id AS "article_id",
			c.user_seq AS "user_seq",
			u.id AS "user_id", 
			u.user_name AS "user_name", 
			u.nickname AS "nickname",
			c.board_id AS "board_id",
			(SELECT IFNULL(COUNT(d.id),0) FROM comment_like d WHERE d.comment_id = c.id AND d.user_seq = #{userSeq}) AS "like_cnt", 
			(SELECT IFNULL(COUNT(e.id),0) FROM comment_dislike e WHERE e.comment_id = c.id AND e.user_seq = #{userSeq}) AS "dislike_cnt", 
			(SELECT IFNULL(COUNT(d.id),0) FROM comment_like d WHERE d.comment_id = c.id) AS "total_like_cnt", 
			(SELECT IFNULL(COUNT(e.id),0) FROM comment_dislike e WHERE e.comment_id = c.id) AS "total_dislike_cnt", 
			c.lft AS "lft", 
			c.rgt AS "rgt", 
			c.depth AS "depth",
			c.created_at AS "created_at"
		FROM comment c, `user` u
		WHERE c.user_seq = u.user_seq
		AND c.article_id = #{articleId}
		ORDER BY c.lft ASC
	</select>
	
	<select id="selectComment" parameterType="map" resultMap="commentMap">
		SELECT c.id AS "id", 
			c.content AS "content",
			c.article_id AS "article_id",
			c.user_seq AS "user_seq",
			u.id AS "user_id", 
			u.user_name AS "user_name", 
			u.nickname AS "nickname",
			c.board_id AS "board_id",
			(SELECT IFNULL(COUNT(d.id),0) FROM comment_like d WHERE d.comment_id = c.id AND d.user_seq = #{userSeq}) AS "like_cnt", 
			(SELECT IFNULL(COUNT(e.id),0) FROM comment_dislike e WHERE e.comment_id = c.id AND e.user_seq = #{userSeq}) AS "dislike_cnt", 
			(SELECT IFNULL(COUNT(d.id),0) FROM comment_like d WHERE d.comment_id = c.id) AS "total_like_cnt", 
			(SELECT IFNULL(COUNT(e.id),0) FROM comment_dislike e WHERE e.comment_id = c.id) AS "total_dislike_cnt", 
			c.lft AS "lft", 
			c.rgt AS "rgt", 
			c.depth AS "depth",
			c.created_at AS "created_at"
		FROM comment c, `user` u
		WHERE c.user_seq = u.user_seq
		AND c.article_id = #{articleId}
		ORDER BY c.lft ASC
	</select>
	
	<insert id="insertComment" parameterType="map">
		<selectKey keyProperty="maxRgt" resultType="int" order="BEFORE">
			SELECT ifnull(max(rgt), 0) 
			  FROM comment 
			 WHERE article_id = ${articleId}
		</selectKey>
		INSERT INTO comment(
						content,
						user_seq,
						article_id,
						board_id,
						lft,
						rgt,
						depth,
						created_at)
			  VALUES (
			  		  #{content},
			  		  #{userSeq},
			  		  #{articleId},
			  		  #{boardId},
			  		  #{maxRgt}+1,
			  		  #{maxRgt}+2,
			  		  #{depth},
			  		  now())
	</insert>
	
	<update id="updateRgt" parameterType="map">
		<selectKey keyProperty="targetRgt,targetDepth" resultType="map" order="BEFORE">
			select rgt as targetRgt, 
				depth as targetDepth 
			from comment 
			where id = #{commentId}
		</selectKey>
		update comment set rgt = rgt + 2 
		where rgt >= #{targetRgt} 
		and id > 0
		and article_id = #{articleId};
	</update>

	
	<update id="updateLft" parameterType="map">
		update comment set lft = lft + 2 
		where lft > #{targetRgt} 
		and id > 0
		and article_id = #{articleId};
	</update>
	
	<delete id="deleteComment" parameterType="int">
		DELETE 
		  FROM comment 
		 WHERE id = #{commentId}
	</delete>
	
	<insert id="replyComment" parameterType="map">
		insert into comment (content, 
			article_id, 
			board_id, 
			user_seq, 
			lft, 
			rgt, 
			depth, 
			created_at)
		values (#{content}, 
			#{articleId}, 
			#{boardId}, 
			#{userSeq},
			#{targetRgt}, 
			#{targetRgt}+1, 
			#{targetDepth}+1, 
			now())
	</insert>
	
	<insert id="likeComment" parameterType="map">
		insert into comment_like (user_seq, comment_id)
		values (${userSeq}, ${commentId})
	</insert>
	
	<insert id="dislikeComment" parameterType="map">
		insert into comment_dislike (user_seq, comment_id)
		values (${userSeq}, ${commentId})
	</insert>
	
	<resultMap type="map" id="commentMap">
		<result property="commentId" column="id" />
		<result property="content" column="content" />
		<result property="userId" column="user_id" />
		<result property="userSeq" column="user_seq" />
		<result property="userName" column="user_name" />
		<result property="nickname" column="nickname" />
		<result property="articleId" column="article_id" />
		<result property="boardId" column="board_id" />
		<result property="lft" column="lft" />
		<result property="rgt" column="rgt" />
		<result property="depth" column="depth" />
		<result property="createdAt" column="created_at" />
		<result property="likeCnt" column="like_cnt" />
		<result property="dislikeCnt" column="dislike_cnt" />
		<result property="totalLikeCnt" column="total_like_cnt" />
		<result property="totalDislikeCnt" column="total_dislike_cnt" />
	</resultMap>
</mapper>